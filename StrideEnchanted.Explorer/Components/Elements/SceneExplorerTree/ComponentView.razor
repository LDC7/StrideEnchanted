@using Microsoft.Extensions.Logging
@using MudBlazor
@using Stride.Engine
@using StrideEnchanted.Explorer.Models
@using StrideEnchanted.Explorer.Services

@implements IDisposable

@inject DataTrackingTimer Timer;
@inject ILoggerFactory LoggerFactory;

<MudCard Class="p-2" Elevation="1" Style="height: 100%; overflow-y:auto;">
  <MudCardHeader>
    <MudText Typo="@Typo.h6">Scene Hierarchy</MudText>
  </MudCardHeader>
  <MudCardContent>
    @if (this.trackedSceneInstance.RootScene == null)
    {
      <MudText Typo="@Typo.h6">Root scene not defined!</MudText>
    }
    else
    {
      <MudTreeView T="@object"
                   AutoExpand="@true"
                   SelectionMode="@SelectionMode.SingleSelection"
                   SelectedValue="@this.Selected">
        <SceneTreeNodeItemView Scene="@this.trackedSceneInstance.RootScene"
                               Expanded="@true"
                               Selected="@this.Selected"
                               SelectedChanged="@this.SelectedChanged" />
      </MudTreeView>
    }
  </MudCardContent>
</MudCard>

@code {
  private TrackedSceneInstance trackedSceneInstance = default!;

  [Parameter]
  [EditorRequired]
  public SceneInstance SceneInstance { get; set; } = default!;

  [Parameter]
  [EditorRequired]
  public object? Selected { get; set; }

  [Parameter]
  public EventCallback<object?> SelectedChanged { get; set; }

  protected override Task OnInitializedAsync()
  {
    this.trackedSceneInstance = new TrackedSceneInstance(this.SceneInstance, this.Timer, this.LoggerFactory);
    return base.OnInitializedAsync();
  }

  public void Dispose()
  {
    this.trackedSceneInstance.Dispose();
  }
}
