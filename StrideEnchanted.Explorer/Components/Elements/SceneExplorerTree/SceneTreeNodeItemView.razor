@using Microsoft.AspNetCore.Components.Web
@using MudBlazor
@using StrideEnchanted.Explorer.Interfaces

<MudTreeViewItem id="@this.Scene.Id"
                 Value="@this.Scene"
                 Text="@this.Scene.Name"
                 IconColor="@Color.Primary"
                 Icon="@Icons.Material.Filled.LabelImportant"
                 Selected="@(this.Selected == (object)this.Scene)"
                 OnClick="@this.HandleClick">
  @foreach (var childScene in this.Scene.Children)
  {
    <SceneTreeNodeItemView Scene="@childScene" Selected="@this.Selected" SelectedChanged="@this.SelectedChanged" />
  }
  @foreach (var entity in this.Scene.Entities)
  {
    <EntityTreeNodeItemView Entity="@entity" Selected="@this.Selected" SelectedChanged="@this.SelectedChanged" />
  }
</MudTreeViewItem>

@code {
  [Parameter]
  [EditorRequired]
  public required ITrackedScene Scene { get; set; } = default!;

  [Parameter]
  [EditorRequired]
  public object? Selected { get; set; }

  [Parameter]
  public EventCallback<object?> SelectedChanged { get; set; }

  private Task HandleClick(MouseEventArgs args)
  {
    return this.SelectedChanged.InvokeAsync(this.Scene);
  }
}
