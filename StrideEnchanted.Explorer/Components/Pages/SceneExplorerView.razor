@page "/"
@page "/scene"

@using Microsoft.AspNetCore.Components.Web
@using MudBlazor
@using Stride.Core
@using Stride.Engine
@using Stride.Games
@using StrideEnchanted.Explorer.Components.Elements
@using System.Reflection
@using StrideEnchanted.Explorer.Interfaces
@using StrideEnchanted.Explorer.Services

@inject IGame Game;

<PageTitle>Scene Explorer</PageTitle>

@if (!this.Game.IsRunning)
{
  <MudText Typo="@Typo.h3" GutterBottom="@true">Game is not running!</MudText>
}
else
{
  <MudGrid Style="height: 100%;">

    <MudItem xs="4" Style="height: 100%;">
      <StrideEnchanted.Explorer.Components.Elements.SceneExplorerTree.ComponentView SceneInstance="@this.sceneSystem.SceneInstance"
                                                                                    @bind-Selected="@this.Selected" />
    </MudItem>

    <MudItem xs="8" Style="height: 100%; overflow-y: auto;">
      @if (this.Selected is ITrackedScene selectedScene)
      {
        <SceneCardView Scene="@selectedScene" />
      }

      @if (this.Selected is ITrackedEntity selectedEntity)
      {
        <StrideEnchanted.Explorer.Components.Elements.EntityCard.ComponentView Entity="@selectedEntity" />
      }
    </MudItem>

  </MudGrid>
}

@code {
  private SceneSystem sceneSystem = null!;

  private object? Selected { get; set; }

  protected override Task OnInitializedAsync()
  {
    this.sceneSystem = this.Game.Services.GetSafeServiceAs<SceneSystem>();
    return base.OnInitializedAsync();
  }
}
